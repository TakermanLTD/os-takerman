# Use PyTorch CUDA base image
FROM pytorch/pytorch:2.1.0-cuda12.1-cudnn8-devel

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git wget curl vim nano htop \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Install additional PyTorch ecosystem
RUN pip install --no-cache-dir \
    torchvision \
    torchaudio \
    torchtext \
    torch-geometric \
    pytorch-lightning \
    torchmetrics

# Install ML libraries
RUN pip install --no-cache-dir \
    transformers \
    accelerate \
    datasets \
    tokenizers \
    sentencepiece \
    sacremoses \
    evaluate \
    peft \
    bitsandbytes

# Install scientific computing
RUN pip install --no-cache-dir \
    numpy \
    scipy \
    pandas \
    scikit-learn \
    matplotlib \
    seaborn \
    plotly \
    opencv-python \
    pillow

# Install development tools
RUN pip install --no-cache-dir \
    jupyter \
    ipython \
    tensorboard \
    wandb \
    mlflow \
    optuna \
    ray[tune]

# Create workspace
WORKDIR /workspace

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}')" || exit 1

EXPOSE 8888 6006

CMD ["python", "-c", "import torch; print(f'PyTorch {torch.__version__} with CUDA {torch.version.cuda}'); print(f'GPU available: {torch.cuda.is_available()}'); exec(open('/dev/stdin').read())"]