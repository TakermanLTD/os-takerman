# TAKERMAN AI SERVER - Minimal Debian Configuration
# Automated installation for high-performance AI server with NVIDIA GPU support

# Localization
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us
d-i console-setup/ask_detect boolean false

# Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string dev-ai
d-i netcfg/get_domain string dev-ai
d-i netcfg/wireless_wep string

# DISABLE network mirror completely - use only CD/ISO packages
d-i apt-setup/use_mirror boolean false
d-i apt-setup/disable-cdrom-entries boolean false
d-i apt-setup/cdrom/set-first boolean false

# Skip regular user creation (root-only system)
d-i passwd/make-user boolean false
d-i user-setup/allow-password-weak boolean true

# Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true

# Partitioning - Fixed for better compatibility
# Allow user to choose from physical disks (no LVM)
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Partition layout - use atomic recipe for simple physical partitions
d-i partman-auto/choose_recipe select atomic
d-i partman-partitioning/confirm_write_new_label boolean true

# Interactive disk selection - safer approach
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-auto/purge_lvm_from_device boolean true

# Base system installation
d-i base-installer/install-recommends boolean false
d-i base-installer/kernel/image string linux-image-amd64

# Package selection - ABSOLUTELY MINIMAL to avoid any failures
tasksel tasksel/first multiselect

# NO additional packages - only what's on the ISO
d-i pkgsel/include string

# Absolutely no upgrades or additional packages
d-i pkgsel/upgrade select none
popularity-contest popularity-contest/participate boolean false

# DISABLE all package installations that could fail
d-i base-installer/install-recommends boolean false
d-i pkgsel/include-install-recommends boolean false
d-i pkgsel/install-language-support boolean false

# COMPLETELY skip network-based package operations
d-i pkgsel/update-policy select none
d-i apt-setup/use_mirror boolean false
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/cdrom/set-next boolean false
d-i apt-setup/cdrom/set-failed boolean false

# Skip package manager configuration that might fail
d-i pkgsel/updatedb boolean false

# Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string default

# Finishing up the installation
d-i finish-install/reboot_in_progress note

# Add all TAKERMAN aliases to .bashrc
d-i preseed/late_command string \
    echo '# TAKERMAN AI Server Aliases' >> /target/root/.bashrc; \
    echo 'alias takstats="echo \"=== TAKERMAN AI SERVER ===\" && echo \"Hostname: \$(hostname)\" && echo \"Uptime: \$(uptime -p 2>/dev/null || echo Unknown)\" && echo \"CPU: \$(nproc) cores\" && echo \"Memory: \$(free -h | grep Mem: | awk '\''{print \$3\"/\"\$2}'\'' 2>/dev/null || echo N/A)\" && echo \"Disk: \$(df -h / | tail -1 | awk '\''{print \$3\"/\"\$2\" (\"\$5\" used)\"}'\'' 2>/dev/null || echo N/A)\" && echo \"GPU: \$(nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null || echo 'No GPU detected')\" && echo \"Docker: \$(systemctl is-active docker 2>/dev/null || echo inactive)\""' >> /target/root/.bashrc; \
    echo 'alias takhelp="echo \"=== TAKERMAN COMMANDS ===\" && echo \"GPU: takgpu, takgpuwatch, takgpustats, taknvtop, takgputemp\" && echo \"Docker: takdocker, takps, takpsa, takimages, takstop, takclean, takup, takdown, taklogs\" && echo \"System: taktop, takiot, taknet, taktemp, takdisk, takmem, takcpu\" && echo \"Security: takports, takfw, takfail, takssh\" && echo \"Control: takreboot, takshutdown, takservices, takupdate\" && echo \"Logs: taklog, takerror, takconfig\""' >> /target/root/.bashrc; \
    echo 'alias takgpu="nvidia-smi 2>/dev/null || echo \"NVIDIA GPU not detected\""' >> /target/root/.bashrc; \
    echo 'alias takgpuwatch="watch -n1 nvidia-smi 2>/dev/null || echo \"NVIDIA GPU not detected\""' >> /target/root/.bashrc; \
    echo 'alias takgpustats="gpustat 2>/dev/null || nvidia-smi 2>/dev/null || echo \"GPU monitoring not available\""' >> /target/root/.bashrc; \
    echo 'alias taknvtop="nvtop 2>/dev/null || nvidia-smi 2>/dev/null || echo \"GPU monitoring not available\""' >> /target/root/.bashrc; \
    echo 'alias takgputemp="nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader 2>/dev/null | head -1 | xargs -I {} echo \"GPU Temperature: {}Â°C\" || echo \"GPU temperature not available\""' >> /target/root/.bashrc; \
    echo 'alias takdocker="docker"' >> /target/root/.bashrc; \
    echo 'alias takps="docker ps"' >> /target/root/.bashrc; \
    echo 'alias takpsa="docker ps -a"' >> /target/root/.bashrc; \
    echo 'alias takimages="docker images"' >> /target/root/.bashrc; \
    echo 'alias takstop="docker stop \$(docker ps -q) 2>/dev/null || echo \"No containers to stop\""' >> /target/root/.bashrc; \
    echo 'alias takclean="docker system prune -af --volumes"' >> /target/root/.bashrc; \
    echo 'alias takcompose="docker compose"' >> /target/root/.bashrc; \
    echo 'alias takup="docker compose up -d 2>/dev/null || echo \"No docker-compose.yml found\""' >> /target/root/.bashrc; \
    echo 'alias takdown="docker compose down 2>/dev/null || echo \"No docker-compose.yml found\""' >> /target/root/.bashrc; \
    echo 'alias taklogs="docker compose logs -f 2>/dev/null || echo \"No docker-compose.yml found\""' >> /target/root/.bashrc; \
    echo 'alias taktop="htop 2>/dev/null || top"' >> /target/root/.bashrc; \
    echo 'alias takiot="iotop 2>/dev/null || echo \"iotop not installed - run: apt install iotop\""' >> /target/root/.bashrc; \
    echo 'alias taknet="iftop 2>/dev/null || echo \"iftop not installed - run: apt install iftop\""' >> /target/root/.bashrc; \
    echo 'alias taktemp="sensors 2>/dev/null || echo \"sensors not installed - run: apt install lm-sensors\""' >> /target/root/.bashrc; \
    echo 'alias takdisk="df -h"' >> /target/root/.bashrc; \
    echo 'alias takmem="free -h"' >> /target/root/.bashrc; \
    echo 'alias takcpu="lscpu"' >> /target/root/.bashrc; \
    echo 'alias takports="netstat -tulpn 2>/dev/null || ss -tulpn"' >> /target/root/.bashrc; \
    echo 'alias takfw="ufw status verbose 2>/dev/null || echo \"UFW not installed\""' >> /target/root/.bashrc; \
    echo 'alias takfail="fail2ban-client status 2>/dev/null || echo \"Fail2ban not installed\""' >> /target/root/.bashrc; \
    echo 'alias takssh="systemctl status sshd 2>/dev/null || systemctl status ssh 2>/dev/null || echo \"SSH service not found\""' >> /target/root/.bashrc; \
    echo 'alias takreboot="systemctl reboot"' >> /target/root/.bashrc; \
    echo 'alias takshutdown="systemctl poweroff"' >> /target/root/.bashrc; \
    echo 'alias takservices="systemctl list-units --type=service --state=running"' >> /target/root/.bashrc; \
    echo 'alias takupdate="apt update && apt upgrade -y"' >> /target/root/.bashrc; \
    echo 'alias taklog="tail -f /var/log/takerman/ai-server.log 2>/dev/null || echo \"TAKERMAN log not found\""' >> /target/root/.bashrc; \
    echo 'alias takerror="journalctl -f -p err"' >> /target/root/.bashrc; \
    echo 'alias takconfig="cd /root/.takerman 2>/dev/null || echo \"TAKERMAN config directory not found\""' >> /target/root/.bashrc; \
    echo "takerman-server" > /target/etc/hostname

# Skip final message
d-i finish-install/keep-consoles boolean true